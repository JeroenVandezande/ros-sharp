/* 
 * This message is auto generated by ROS#. Please DO NOT modify.
 * Note:
 * - Comments from the original code will be written in their own line 
 * - Variable sized arrays will be initialized to array of size 0 
 * Please report any issues at 
 * <https://github.com/siemens/ros-sharp> 
 */

#if ROS2

using RosSharp.RosBridgeClient.MessageTypes.Std;
using RosSharp.RosBridgeClient.MessageTypes.Geometry;
using RosSharp.RosBridgeClient.MessageTypes.BuiltinInterfaces;

namespace RosSharp.RosBridgeClient.MessageTypes.Visualization
{
    public class ImageMarker : Message
    {
        public const string RosMessageName = "visualization_msgs/msg/ImageMarker";

        public const int CIRCLE = 0;
        public const int LINE_STRIP = 1;
        public const int LINE_LIST = 2;
        public const int POLYGON = 3;
        public const int POINTS = 4;
        public const int ADD = 0;
        public const int REMOVE = 1;
        public Header header { get; set; }
        //  Namespace which is used with the id to form a unique id.
        public string ns { get; set; }
        //  Unique id within the namespace.
        public int id { get; set; }
        //  One of the above types, e.g. CIRCLE, LINE_STRIP, etc.
        public int type { get; set; }
        //  Either ADD or REMOVE.
        public int action { get; set; }
        //  Two-dimensional coordinate position, in pixel-coordinates.
        public Point position { get; set; }
        //  The scale of the object, e.g. the diameter for a CIRCLE.
        public float scale { get; set; }
        //  The outline color of the marker.
        public ColorRGBA outline_color { get; set; }
        //  Whether or not to fill in the shape with color.
        public byte filled { get; set; }
        //  Fill color; in the range: [0.0-1.0]
        public ColorRGBA fill_color { get; set; }
        //  How long the object should last before being automatically deleted.
        //  0 indicates forever.
        public Duration lifetime { get; set; }
        //  Coordinates in 2D in pixel coords. Used for LINE_STRIP, LINE_LIST, POINTS, etc.
        public Point[] points { get; set; }
        //  The color for each line, point, etc. in the points field.
        public ColorRGBA[] outline_colors { get; set; }

        public ImageMarker()
        {
            this.header = new Header();
            this.ns = "";
            this.id = 0;
            this.type = 0;
            this.action = 0;
            this.position = new Point();
            this.scale = 0.0f;
            this.outline_color = new ColorRGBA();
            this.filled = 0;
            this.fill_color = new ColorRGBA();
            this.lifetime = new Duration();
            this.points = new Point[0];
            this.outline_colors = new ColorRGBA[0];
        }

        public ImageMarker(Header header, string ns, int id, int type, int action, Point position, float scale, ColorRGBA outline_color, byte filled, ColorRGBA fill_color, Duration lifetime, Point[] points, ColorRGBA[] outline_colors)
        {
            this.header = header;
            this.ns = ns;
            this.id = id;
            this.type = type;
            this.action = action;
            this.position = position;
            this.scale = scale;
            this.outline_color = outline_color;
            this.filled = filled;
            this.fill_color = fill_color;
            this.lifetime = lifetime;
            this.points = points;
            this.outline_colors = outline_colors;
        }
    }
}
#endif
