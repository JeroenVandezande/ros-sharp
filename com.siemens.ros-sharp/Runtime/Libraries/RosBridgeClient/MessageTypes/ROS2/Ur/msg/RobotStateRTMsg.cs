/* 
 * This message is auto generated by ROS#. Please DO NOT modify.
 * Note:
 * - Comments from the original code will be written in their own line 
 * - Variable sized arrays will be initialized to array of size 0 
 * Please report any issues at 
 * <https://github.com/siemens/ros-sharp> 
 */

#if ROS2

namespace RosSharp.RosBridgeClient.MessageTypes.Ur
{
    public class RobotStateRTMsg : Message
    {
        public const string RosMessageName = "ur_msgs/msg/RobotStateRTMsg";

        //  Data structure for the realtime communications interface (aka Matlab interface)
        //  used by the Universal Robots controller
        //  
        //  This data structure is send at 125 Hz on TCP port 30003
        //  
        //  Dokumentation can be found on the Universal Robots Support Wiki
        //  (http://wiki03.lynero.net/Technical/RealTimeClientInterface?rev=9)
        public double time { get; set; }
        public double[] q_target { get; set; }
        public double[] qd_target { get; set; }
        public double[] qdd_target { get; set; }
        public double[] i_target { get; set; }
        public double[] m_target { get; set; }
        public double[] q_actual { get; set; }
        public double[] qd_actual { get; set; }
        public double[] i_actual { get; set; }
        public double[] tool_acc_values { get; set; }
        public double[] tcp_force { get; set; }
        public double[] tool_vector { get; set; }
        public double[] tcp_speed { get; set; }
        public double digital_input_bits { get; set; }
        public double[] motor_temperatures { get; set; }
        public double controller_timer { get; set; }
        public double test_value { get; set; }
        public double robot_mode { get; set; }
        public double[] joint_modes { get; set; }

        public RobotStateRTMsg()
        {
            this.time = 0.0;
            this.q_target = new double[0];
            this.qd_target = new double[0];
            this.qdd_target = new double[0];
            this.i_target = new double[0];
            this.m_target = new double[0];
            this.q_actual = new double[0];
            this.qd_actual = new double[0];
            this.i_actual = new double[0];
            this.tool_acc_values = new double[0];
            this.tcp_force = new double[0];
            this.tool_vector = new double[0];
            this.tcp_speed = new double[0];
            this.digital_input_bits = 0.0;
            this.motor_temperatures = new double[0];
            this.controller_timer = 0.0;
            this.test_value = 0.0;
            this.robot_mode = 0.0;
            this.joint_modes = new double[0];
        }

        public RobotStateRTMsg(double time, double[] q_target, double[] qd_target, double[] qdd_target, double[] i_target, double[] m_target, double[] q_actual, double[] qd_actual, double[] i_actual, double[] tool_acc_values, double[] tcp_force, double[] tool_vector, double[] tcp_speed, double digital_input_bits, double[] motor_temperatures, double controller_timer, double test_value, double robot_mode, double[] joint_modes)
        {
            this.time = time;
            this.q_target = q_target;
            this.qd_target = qd_target;
            this.qdd_target = qdd_target;
            this.i_target = i_target;
            this.m_target = m_target;
            this.q_actual = q_actual;
            this.qd_actual = qd_actual;
            this.i_actual = i_actual;
            this.tool_acc_values = tool_acc_values;
            this.tcp_force = tcp_force;
            this.tool_vector = tool_vector;
            this.tcp_speed = tcp_speed;
            this.digital_input_bits = digital_input_bits;
            this.motor_temperatures = motor_temperatures;
            this.controller_timer = controller_timer;
            this.test_value = test_value;
            this.robot_mode = robot_mode;
            this.joint_modes = joint_modes;
        }
    }
}
#endif
