/* 
 * This message is auto generated by ROS#. Please DO NOT modify.
 * Note:
 * - Comments from the original code will be written in their own line 
 * - Variable sized arrays will be initialized to array of size 0 
 * Please report any issues at 
 * <https://github.com/siemens/ros-sharp> 
 */

#if ROS2

namespace RosSharp.RosBridgeClient.MessageTypes.TypeDescriptionInterfaces
{
    public class TypeSource : Message
    {
        public const string RosMessageName = "type_description_interfaces/msg/TypeSource";

        //  Represents the original source of a ROS 2 interface definition.
        //  ROS interface type name, in PACKAGE/NAMESPACE/TYPENAME format.
        public string type_name { get; set; }
        //  The type of the original source file, typically matching the file extension.
        //  Well-known encodings: "idl", "msg", "srv", "action", "dynamic", "implicit".
        //  "dynamic" specifies a type created programmatically by a user, thus having no source.
        //  "implicit" specifies a type created automatically as a subtype of a
        //  complex type (service or action) - such as the request message for a service.
        //  Implicit types will have no contents, the full source will be available on the parent srv/action.
        public string encoding { get; set; }
        //  Dumped contents of the interface definition source file.
        //  If `encoding` is "dynamic" or "implicit", this field will be empty.
        public string raw_file_contents { get; set; }

        public TypeSource()
        {
            this.type_name = "";
            this.encoding = "";
            this.raw_file_contents = "";
        }

        public TypeSource(string type_name, string encoding, string raw_file_contents)
        {
            this.type_name = type_name;
            this.encoding = encoding;
            this.raw_file_contents = raw_file_contents;
        }
    }
}
#endif
