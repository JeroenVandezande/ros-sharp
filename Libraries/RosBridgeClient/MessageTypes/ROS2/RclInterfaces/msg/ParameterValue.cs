/* 
 * This message is auto generated by ROS#. Please DO NOT modify.
 * Note:
 * - Comments from the original code will be written in their own line 
 * - Variable sized arrays will be initialized to array of size 0 
 * Please report any issues at 
 * <https://github.com/siemens/ros-sharp> 
 */

#if ROS2

namespace RosSharp.RosBridgeClient.MessageTypes.RclInterfaces
{
    public class ParameterValue : Message
    {
        public const string RosMessageName = "rcl_interfaces/msg/ParameterValue";

        //  Used to determine which of the next *_value fields are set.
        //  ParameterType.PARAMETER_NOT_SET indicates that the parameter was not set
        //  (if gotten) or is uninitialized.
        //  Values are enumerated in `ParameterType.msg`.
        //  The type of this parameter, which corresponds to the appropriate field below.
        public byte type { get; set; }
        //  "Variant" style storage of the parameter value. Only the value corresponding
        //  the type field will have valid information.
        //  Boolean value, can be either true or false.
        public bool bool_value { get; set; }
        //  Integer value ranging from -9,223,372,036,854,775,808 to
        //  9,223,372,036,854,775,807.
        public long integer_value { get; set; }
        //  A double precision floating point value following IEEE 754.
        public double double_value { get; set; }
        //  A textual value with no practical length limit.
        public string string_value { get; set; }
        //  An array of bytes, used for non-textual information.
        public sbyte[] byte_array_value { get; set; }
        //  An array of boolean values.
        public bool[] bool_array_value { get; set; }
        //  An array of 64-bit integer values.
        public long[] integer_array_value { get; set; }
        //  An array of 64-bit floating point values.
        public double[] double_array_value { get; set; }
        //  An array of string values.
        public string[] string_array_value { get; set; }

        public ParameterValue()
        {
            this.type = 0;
            this.bool_value = false;
            this.integer_value = 0;
            this.double_value = 0.0;
            this.string_value = "";
            this.byte_array_value = new sbyte[0];
            this.bool_array_value = new bool[0];
            this.integer_array_value = new long[0];
            this.double_array_value = new double[0];
            this.string_array_value = new string[0];
        }

        public ParameterValue(byte type, bool bool_value, long integer_value, double double_value, string string_value, sbyte[] byte_array_value, bool[] bool_array_value, long[] integer_array_value, double[] double_array_value, string[] string_array_value)
        {
            this.type = type;
            this.bool_value = bool_value;
            this.integer_value = integer_value;
            this.double_value = double_value;
            this.string_value = string_value;
            this.byte_array_value = byte_array_value;
            this.bool_array_value = bool_array_value;
            this.integer_array_value = integer_array_value;
            this.double_array_value = double_array_value;
            this.string_array_value = string_array_value;
        }
    }
}
#endif
